name: Build Windows

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - rename-screenconnect

env:
  CARGO_TERM_COLOR: always
  VCPKG_ROOT: ${{ github.workspace }}\vcpkg
  VCPKG_DEFAULT_TRIPLET: x64-windows-static
  LIBCLANG_PATH: C:\Program Files\LLVM\bin

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 1️⃣ Checkout source code
      - name: Checkout
        uses: actions/checkout@v4

      # 2️⃣ Install system dependencies
      - name: Install dependencies (LLVM + Rust)
        shell: powershell
        run: |
          choco install llvm -y
          rustup update stable
          rustup default stable

      # 3️⃣ Install Flutter (for Rustdesk’s Flutter frontend)
      - name: Install Flutter
        shell: powershell
        run: |
          git clone https://github.com/flutter/flutter.git -b stable $env:USERPROFILE\flutter
          echo "$env:USERPROFILE\flutter\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          flutter config --enable-windows-desktop
          flutter doctor

      # 4️⃣ Bootstrap and prepare vcpkg
      - name: Bootstrap vcpkg and install required libs
        shell: powershell
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          .\vcpkg\bootstrap-vcpkg.bat
          .\vcpkg\vcpkg.exe install opus:x64-windows-static libvpx:x64-windows-static libyuv:x64-windows-static aom:x64-windows-static

      # 5️⃣ Build the project (Rust + Flutter)
      - name: Build ScreenConnect
        shell: powershell
        run: |
          cargo build --release

      # 6️⃣ Upload compiled EXE as artifact
      - name: Upload Windows EXE
        uses: actions/upload-artifact@v4
        with:
          name: ScreenConnect-win
          path: target\release\*.exe
