name: Windows

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: windows-2022

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup MSVC (VS Build Tools)
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      # Install LLVM so bindgen can find libclang on the runner
      - name: Install LLVM (libclang)
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "17.0.6"
          directory: ${{ runner.temp }}\llvm

      # Have run-vcpkg clone vcpkg for us (no submodule needed)
      - name: run vcpkg
        id: vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: ${{ runner.temp }}\vcpkg
          vcpkgGitURL: https://github.com/microsoft/vcpkg.git
          # IMPORTANT: this must be a 40-char SHA1. The one below matches the tool
          # version you saw in logs. You can keep it or change to another real SHA.
          vcpkgGitCommitId: 4580816534ed8fd9634ac83d46471440edd82dfe
          runVcpkgInstall: true
          # If you don't have a vcpkg.json manifest, install the needed libs explicitly:
          vcpkgArguments: >
            opus:x64-windows-static
            libvpx:x64-windows-static
            libyuv:x64-windows-static
            aom:x64-windows-static

      # Export env so build scripts can find headers/libs and libclang
      - name: Configure environment for build
        shell: pwsh
        run: |
          echo "VCPKG_ROOT=${{ steps.vcpkg.outputs.vcpkgRootPath }}" >> $env:GITHUB_ENV
          echo "VCPKG_DEFAULT_TRIPLET=x64-windows-static" >> $env:GITHUB_ENV
          echo "BINDGEN_EXTRA_CLANG_ARGS=-I${{ steps.vcpkg.outputs.vcpkgRootPath }}\installed\x64-windows-static\include" >> $env:GITHUB_ENV
          echo "LIBCLANG_PATH=${{ runner.temp }}\llvm\bin" >> $env:GITHUB_ENV
          echo "RUSTFLAGS=-Ctarget-feature=+crt-static" >> $env:GITHUB_ENV

      - name: Cache cargo
        uses: swatinem/rust-cache@v2

      - name: Build (Cargo)
        run: cargo build --release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ScreenConnect
          path: |
            target\release\*.exe
            target\release\*.dll
            target\release\*.pdb
